modified_clone: &MODIFIED_CLONE
  # makes sure that for a PR the CI runs against a merged main
  clone_script: |
    if [ -z "$CIRRUS_PR" ]; then
      # if you're not in a PR then clone against the branch name that was pushed to.
      git clone --recursive --branch=$CIRRUS_BRANCH https://x-access-token:${CIRRUS_REPO_CLONE_TOKEN}@github.com/${CIRRUS_REPO_FULL_NAME}.git $CIRRUS_WORKING_DIR
      git reset --hard $CIRRUS_CHANGE_IN_REPO
    else
      # it's a PR so clone the main branch then merge the changes from the PR
      git clone https://x-access-token:${CIRRUS_REPO_CLONE_TOKEN}@github.com/${CIRRUS_REPO_FULL_NAME}.git $CIRRUS_WORKING_DIR
      git fetch origin pull/$CIRRUS_PR/head:pull/$CIRRUS_PR
    
      # CIRRUS_BASE_BRANCH will probably be `main` for the majority of the time
      # However, if you do a PR against a maintenance branch we will want to
      # merge the PR into the maintenance branch, not main
      git checkout $CIRRUS_BASE_BRANCH

      # alpine git package needs default user.name and user.email to be set before a merge
      git -c user.email="you@example.com" merge --no-commit pull/$CIRRUS_PR
      git submodule update --init --recursive
    fi


macos_arm64_test_task:
  macos_instance:
    image: ghcr.io/cirruslabs/macos-monterey-xcode:14

  <<: *MODIFIED_CLONE

  pip_cache:
    folder: ~/.cache/pip

  test_script: |
    brew install python@3.10

    export PATH=/opt/homebrew/opt/python@3.10/libexec/bin:$PATH
    python --version

    RUNNER_OS="macOS"
    SDKROOT=/Applications/Xcode-14.0.0.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk
    
    # NOTE: OpenBLAS is not used in this job; if that's done in the future, ensure
    # PKG_CONFIG_PATH points to the directory containing the openblas.pc file
    # that's installed with the cibw_before_build.sh command.
    # used for installing OpenBLAS/gfortran
    bash tools/wheels/cibw_before_build.sh $PWD

    pushd ~/
    python -m venv numpy-dev
    source numpy-dev/bin/activate
    popd

    pip install -r build_requirements.txt
    pip install pytest pytest-xdist hypothesis typing_extensions
    
    spin build
    spin test -j auto
